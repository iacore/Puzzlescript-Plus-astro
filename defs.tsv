storagewrapper.js	storage_has	0	function storage_has(key) {
storagewrapper.js	storage_get	4	function storage_get(key) {
storagewrapper.js	storage_set	8	function storage_set(key, value) {
storagewrapper.js	storage_remove	12	function storage_remove(key) {
debug.js	canSetHTMLColors	0	var canSetHTMLColors = false
debug.js	canDump	1	var canDump = true
debug.js	canYoutube	2	var canYoutube = false
debug.js	recordingStartsFromLevel	3	var recordingStartsFromLevel = 0
debug.js	inputHistory	4	var inputHistory = []
debug.js	canOpenEditor	6	var canOpenEditor = true
debug.js	IDE	7	var IDE = true
debug.js	solving	8	var solving = false
debug.js	debugger_turnIndex	10	var debugger_turnIndex = 0
debug.js	debug_visualisation_array	11	var debug_visualisation_array = []
debug.js	diffToVisualize	12	var diffToVisualize = null
debug.js	convertLevelToString	14	function convertLevelToString() {
debug.js	stripHTMLTags	41	function stripHTMLTags(html_str) {
debug.js	dumpTestCase	48	function dumpTestCase() {
debug.js	clearInputHistory	106	function clearInputHistory() {
debug.js	pushInput	113	function pushInput(inp) {
globalVariables.js	unitTesting	0	var unitTesting = false
globalVariables.js	curlevel	1	var curlevel = 0
globalVariables.js	solvedSections	2	var solvedSections = []
globalVariables.js	curlevelTarget	3	var curlevelTarget = null
globalVariables.js	hasUsedCheckpoint	4	var hasUsedCheckpoint = false
globalVariables.js	levelEditorOpened	5	var levelEditorOpened = false
globalVariables.js	muted	6	var muted = 0
globalVariables.js	runrulesonlevelstart_phase	7	var runrulesonlevelstart_phase = false
globalVariables.js	ignoreNotJustPressedAction	8	var ignoreNotJustPressedAction = true
globalVariables.js	doSetupTitleScreenLevelContinue	10	function doSetupTitleScreenLevelContinue() {
globalVariables.js	verbose_logging	35	var verbose_logging = false
globalVariables.js	throttle_movement	36	var throttle_movement = false
globalVariables.js	cache_console_messages	37	var cache_console_messages = false
globalVariables.js	quittingTitleScreen	38	var quittingTitleScreen = false
globalVariables.js	quittingMessageScreen	39	var quittingMessageScreen = false
globalVariables.js	deltatime	40	var deltatime = 17
globalVariables.js	timer	41	var timer = 0
globalVariables.js	repeatinterval	42	var repeatinterval = 150
globalVariables.js	autotick	43	var autotick = 0
globalVariables.js	autotickinterval	44	var autotickinterval = 0
globalVariables.js	winning	45	var winning = false
globalVariables.js	againing	46	var againing = false
globalVariables.js	againinterval	47	var againinterval = 150
globalVariables.js	norepeat_action	48	var norepeat_action = false
globalVariables.js	oldflickscreendat	49	var oldflickscreendat = [] //used for buffering old flickscreen/scrollscreen positions, in case player vanishes
globalVariables.js	keybuffer	50	var keybuffer = []
globalVariables.js	tweeninterval	52	var tweeninterval = 0
globalVariables.js	tweentimer	53	var tweentimer = 0
globalVariables.js	restarting	55	var restarting = false
globalVariables.js	messageselected	57	var messageselected = false
globalVariables.js	textImages	59	var textImages = {}
globalVariables.js	initLevel	60	var initLevel = {
globalVariables.js	level	81	var level = initLevel
rng.js	RC4	37	function RC4(seed) {
rng.js	print_call_stack	79	function print_call_stack() {
rng.js	RNG	91	function RNG(seed) {
riffwave.js	FastBase64_chars	22	var FastBase64_chars =
riffwave.js	FastBase64_encLookup	24	var FastBase64_encLookup = []
riffwave.js	FastBase64_Init	26	function FastBase64_Init() {
riffwave.js	FastBase64_Encode	33	function FastBase64_Encode(src) {
riffwave.js	u32ToArray	62	function u32ToArray(i) {
riffwave.js	u16ToArray	66	function u16ToArray(i) {
riffwave.js	MakeRiff	70	function MakeRiff(sampleRate, bitsPerSample, data) {
sfxr.js	SOUND_VOL	0	var SOUND_VOL = 0.25
sfxr.js	SAMPLE_RATE	1	var SAMPLE_RATE = 5512
sfxr.js	BIT_DEPTH	2	var BIT_DEPTH = 8
sfxr.js	SQUARE	4	var SQUARE = 0
sfxr.js	SAWTOOTH	5	var SAWTOOTH = 1
sfxr.js	SINE	6	var SINE = 2
sfxr.js	NOISE	7	var NOISE = 3
sfxr.js	TRIANGLE	8	var TRIANGLE = 4
sfxr.js	BREAKER	9	var BREAKER = 5
sfxr.js	SHAPES	11	var SHAPES = ["square", "sawtooth", "sine", "noise", "triangle", "breaker"]
sfxr.js	checkAudioContextExists	15	function checkAudioContextExists() {
sfxr.js	masterVolume	30	var masterVolume = 1.0
sfxr.js	Params	33	function Params() {
sfxr.js	seeded	84	var seeded = false
sfxr.js	frnd	85	function frnd(range) {
sfxr.js	rnd	93	function rnd(max) {
sfxr.js	pickupCoin	101	function pickupCoin() {
sfxr.js	laserShoot	121	function laserShoot() {
sfxr.js	explosion	160	function explosion() {
sfxr.js	birdSound	193	function birdSound() {
sfxr.js	pushSound	380	function pushSound() {
sfxr.js	powerUp	406	function powerUp() {
sfxr.js	hitHurt	433	function hitHurt() {
sfxr.js	jump	448	function jump() {
sfxr.js	blipSelect	466	function blipSelect() {
sfxr.js	random	482	function random() {
sfxr.js	generators	521	var generators = [
sfxr.js	generatorNames	534	var generatorNames = [
sfxr.js	generateFromSeed	550	function generateFromSeed(seed) {
sfxr.js	SoundEffect	561	function SoundEffect(length, sample_rate) {
sfxr.js	ULBS	570	function ULBS() {
sfxr.js	sfxCache	930	var sfxCache = {}
sfxr.js	cachedSeeds	931	var cachedSeeds = []
sfxr.js	CACHE_MAX	932	var CACHE_MAX = 50
sfxr.js	cacheSeed	934	function cacheSeed(seed) {
sfxr.js	playSound	957	function playSound(seed) {
sfxr.js	killAudioButton	967	function killAudioButton() {
sfxr.js	showAudioButton	976	function showAudioButton() {
sfxr.js	toggleMute	985	function toggleMute() {
sfxr.js	muteAudio	993	function muteAudio() {
sfxr.js	unMuteAudio	1003	function unMuteAudio() {
colors.js	reg_color_names	392	var reg_color_names =
colors.js	reg_color	395	var reg_color =
graphics.js	createSprite	2	function createSprite(name, spritegrid, colors, padding) {
graphics.js	renderSprite	15	function renderSprite(spritectx, spritegrid, colors, padding, x, y) {
graphics.js	drawTextWithCustomFont	47	function drawTextWithCustomFont(txt, ctx, x, y) {
graphics.js	textsheetCanvas	59	var textsheetCanvas = null
graphics.js	regenText	61	function regenText(spritecanvas, spritectx) {
graphics.js	editor_s_grille	100	var editor_s_grille = [
graphics.js	spritesheetCanvas	109	var spritesheetCanvas = null
graphics.js	regenSpriteImages	110	function regenSpriteImages() {
graphics.js	glyphSelectedIndex	174	var glyphSelectedIndex = 0
graphics.js	editorRowCount	175	var editorRowCount = 1
graphics.js	editorGlyphMovements	176	var editorGlyphMovements = []
graphics.js	canvasdict	178	var canvasdict = {}
graphics.js	makeSpriteCanvas	179	function makeSpriteCanvas(name) {
graphics.js	generateGlyphImages	192	function generateGlyphImages() {
graphics.js	x	358	var x = 0
graphics.js	y	359	var y = 0
graphics.js	screenOffsetX	364	let screenOffsetX = 0
graphics.js	screenOffsetY	365	let screenOffsetY = 0
graphics.js	canvas	366	var canvas = document.getElementById("gameCanvas")
graphics.js	ctx	367	var ctx = canvas.getContext("2d")
graphics.js	glyphCount	370	function glyphCount() {
graphics.js	redraw	380	function redraw() {
graphics.js	drawSmoothScreenDebug	783	function drawSmoothScreenDebug(ctx) {
graphics.js	drawEditorIcons	870	function drawEditorIcons(mini, minj) {
graphics.js	oldcellwidth	996	var oldcellwidth = 0
graphics.js	oldcellheight	997	var oldcellheight = 0
graphics.js	oldtextmode	998	var oldtextmode = -1
graphics.js	oldfgcolor	999	var oldfgcolor = -1
graphics.js	forceRegenImages	1000	var forceRegenImages = false
graphics.js	textcellwidth	1002	var textcellwidth = 0
graphics.js	textcellheight	1003	var textcellheight = 0
graphics.js	canvasResize	1005	function canvasResize() {
mobile.js	Animator	749	let Animator = function () {
mobile.js	Animatable	809	function Animatable(key, increment, update) {
inputoutput.js	keyRepeatTimer	0	var keyRepeatTimer = 0
inputoutput.js	keyRepeatIndex	1	var keyRepeatIndex = 0
inputoutput.js	input_throttle_timer	2	var input_throttle_timer = 0.0
inputoutput.js	lastinput	3	var lastinput = -100
inputoutput.js	dragging	5	var dragging = false
inputoutput.js	rightdragging	6	var rightdragging = false
inputoutput.js	columnAdded	7	var columnAdded = false
inputoutput.js	selectText	9	function selectText(containerid, e) {
inputoutput.js	recalcLevelBounds	34	function recalcLevelBounds() {}
inputoutput.js	arrCopy	36	function arrCopy(from, fromoffset, to, tooffset, len) {
inputoutput.js	adjustLevel	40	function adjustLevel(level, widthdelta, heightdelta) {
inputoutput.js	addLeftColumn	56	function addLeftColumn() {
inputoutput.js	addRightColumn	66	function addRightColumn() {
inputoutput.js	addTopRow	76	function addTopRow() {
inputoutput.js	addBottomRow	86	function addBottomRow() {
inputoutput.js	removeLeftColumn	96	function removeLeftColumn() {
inputoutput.js	removeRightColumn	109	function removeRightColumn() {
inputoutput.js	removeTopRow	122	function removeTopRow() {
inputoutput.js	removeBottomRow	134	function removeBottomRow() {
inputoutput.js	matchGlyph	147	function matchGlyph(inputmask, glyphAndMask) {
inputoutput.js	htmlEntityMap	179	var htmlEntityMap = {
inputoutput.js	selectableint	188	var selectableint = 0
inputoutput.js	printLevel	190	function printLevel() {
inputoutput.js	levelEditorClick	236	function levelEditorClick(event, click) {
inputoutput.js	levelEditorRightClick	300	function levelEditorRightClick(event, click) {
inputoutput.js	getTilesTraversingPoints	336	function getTilesTraversingPoints(x1, y1, x2, y2) {
inputoutput.js	x1	523	var x1 = 5
inputoutput.js	y1	524	var y1 = 5
inputoutput.js	x2	525	var x2 = 5
inputoutput.js	y2	526	var y2 = 5
inputoutput.js	amountOfLevelsOnScreen	527	let amountOfLevelsOnScreen = 0
inputoutput.js	mouseAction	529	function mouseAction(event, click, id) {
inputoutput.js	anyEditsSinceMouseDown	739	var anyEditsSinceMouseDown = false
inputoutput.js	onMouseDown	741	function onMouseDown(event, wasFiredByTouch = false) {
inputoutput.js	rightClickCanvas	809	function rightClickCanvas(event) {
inputoutput.js	onMouseUp	818	function onMouseUp(event, wasFiredByTouch = false) {
inputoutput.js	onKeyDown	853	function onKeyDown(event) {
inputoutput.js	relMouseCoords	936	function relMouseCoords(event) {
inputoutput.js	onKeyUp	963	function onKeyUp(event) {
inputoutput.js	onMyFocus	974	function onMyFocus(event) {
inputoutput.js	onMyBlur	980	function onMyBlur(event) {
inputoutput.js	mouseCoordX	986	var mouseCoordX = 0
inputoutput.js	mouseCoordY	987	var mouseCoordY = 0
inputoutput.js	mousePixelX	988	var mousePixelX = 0
inputoutput.js	mousePixelY	989	var mousePixelY = 0
inputoutput.js	setMouseCoord	991	function setMouseCoord(e) {
inputoutput.js	mouseMove	1004	function mouseMove(event) {
inputoutput.js	mouseInCanvas	1044	let mouseInCanvas = false
inputoutput.js	onMouseIn	1046	function onMouseIn() {
inputoutput.js	onMouseOut	1051	function onMouseOut() {
inputoutput.js	onTouchDown	1060	function onTouchDown(event) {
inputoutput.js	onTouchUp	1064	function onTouchUp(event) {
inputoutput.js	onMouseWheel	1081	function onMouseWheel(event) {
inputoutput.js	levelSelectScroll	1106	function levelSelectScroll(direction) {
inputoutput.js	clamp	1121	function clamp(number, min, max) {
inputoutput.js	prevent	1125	function prevent(e) {
inputoutput.js	titleButtonSelected	1133	function titleButtonSelected() {
inputoutput.js	gamepadKeys	1147	var gamepadKeys = [] // used to store keys held at previous frame
inputoutput.js	pollGamepads	1149	function pollGamepads() {
inputoutput.js	checkKey	1288	function checkKey(e, justPressed) {
inputoutput.js	update	1585	function update() {
inputoutput.js	looping	1679	var looping = false
inputoutput.js	loop	1681	var loop = function () {
console.js	jumpToLine	0	function jumpToLine(i) {
console.js	consolecache	26	var consolecache = []
console.js	consolePrintFromRule	28	function consolePrintFromRule(text, rule, urgent) {
console.js	consolePrint	53	function consolePrint(text, urgent, linenumber, inspect_ID) {
console.js	cache_n	66	var cache_n = 0
console.js	addToConsole	68	function addToConsole(text) {
console.js	consoleCacheDump	81	function consoleCacheDump() {
console.js	consoleError	163	function consoleError(text) {
console.js	clearConsole	167	function clearConsole() {
console.js	clearConsoleClick	179	var clearConsoleClick = document.getElementById("clearConsoleClick")
console.js	verboseToggle	182	function verboseToggle() {
console.js	verboseLoggingClick	199	var verboseLoggingClick = document.getElementById("verboseLoggingClick")
buildStandalone.js	get_blob	0	var get_blob = function () {
buildStandalone.js	standalone_HTML_String	4	var standalone_HTML_String = ""
buildStandalone.js	clientStandaloneRequest	6	var clientStandaloneRequest = new XMLHttpRequest()
buildStandalone.js	buildStandalone	25	function buildStandalone(sourceCode) {
engine.js	onLevelRestarted	0	var onLevelRestarted = new Event("levelRestarted")
engine.js	RandomGen	2	var RandomGen = new RNG()
engine.js	intro_template	4	var intro_template = [
engine.js	sitelock_template	20	var sitelock_template = [
engine.js	messagecontainer_template	36	var messagecontainer_template = [
engine.js	messagecontainer_template_mouse	52	var messagecontainer_template_mouse = [
engine.js	titletemplate_firstgo	68	var titletemplate_firstgo = [
engine.js	titletemplate_firstgo_selected	84	var titletemplate_firstgo_selected = [
engine.js	titletemplate_empty	100	var titletemplate_empty = [
engine.js	title_options	116	var title_options = [
engine.js	MENUITEM_CONTINUE	143	var MENUITEM_CONTINUE = 0
engine.js	MENUITEM_LEVELSELECT	144	var MENUITEM_LEVELSELECT = 1
engine.js	MENUITEM_SETTINGS	145	var MENUITEM_SETTINGS = 2
engine.js	MENUITEM_NEWGAME	146	var MENUITEM_NEWGAME = 3
engine.js	MENUITEMVERSION_IDLE	148	var MENUITEMVERSION_IDLE = 0
engine.js	MENUITEMVERSION_HIGHLIGHTED	149	var MENUITEMVERSION_HIGHLIGHTED = 1
engine.js	MENUITEMVERSION_SELECTED	150	var MENUITEMVERSION_SELECTED = 2
engine.js	MENUITEMVERSION_HOVERED	151	var MENUITEMVERSION_HOVERED = 3
engine.js	titleImage	153	var titleImage = []
engine.js	titleWidth	154	var titleWidth = titletemplate_empty[0].length
engine.js	titleHeight	155	var titleHeight = titletemplate_empty.length
engine.js	textMode	156	var textMode = true
engine.js	titleScreen	157	var titleScreen = true
engine.js	titleMode	158	var titleMode = 0 //1 means title screen with options, 2 means level select
engine.js	titleSelection	159	var titleSelection = 0
engine.js	titleSelectOptions	160	var titleSelectOptions = 2
engine.js	titleAvailableOptions	161	var titleAvailableOptions = []
engine.js	titleSelected	162	var titleSelected = false
engine.js	hoverSelection	163	var hoverSelection = -1 //When mouse controls are enabled, over which row the mouse is hovering. -1 when disabled.
engine.js	showContinueOptionOnTitleScreen	165	function showContinueOptionOnTitleScreen() {
engine.js	hasStartedTheGame	173	function hasStartedTheGame() {
engine.js	hasSolvedAtLeastOneSection	177	function hasSolvedAtLeastOneSection() {
engine.js	unloadGame	185	function unloadGame() {
engine.js	isContinueOptionSelected	195	function isContinueOptionSelected() {
engine.js	isNewGameOptionSelected	203	function isNewGameOptionSelected() {
engine.js	isLevelSelectOptionSelected	216	function isLevelSelectOptionSelected() {
engine.js	generateTitleScreen	231	function generateTitleScreen() {
engine.js	levelSelectScrollPos	427	var levelSelectScrollPos = 0
engine.js	gotoLevelSelectScreen	429	function gotoLevelSelectScreen() {
engine.js	generateLevelSelectScreen	462	function generateLevelSelectScreen() {
engine.js	gotoLevel	630	function gotoLevel(sectionIndex) {
engine.js	introstate	654	var introstate = {
engine.js	state	664	var state = introstate
engine.js	deepClone	666	function deepClone(item) {
engine.js	wordwrap	720	function wordwrap(str, width, handleNewlines = false) {
engine.js	splitMessage	751	var splitMessage = []
engine.js	drawMessageScreen	753	function drawMessageScreen() {
engine.js	loadedLevelSeed	838	var loadedLevelSeed = 0
engine.js	loadLevelFromLevelDat	840	function loadLevelFromLevelDat(state, leveldat, randomseed, clearinputhistory) {
engine.js	loadLevelFromStateTarget	923	function loadLevelFromStateTarget(state, levelindex, target, randomseed) {
engine.js	loadLevelFromState	939	function loadLevelFromState(state, levelindex, randomseed) {
engine.js	sprites	957	var sprites = [
engine.js	loadedCustomFont	980	let loadedCustomFont = false
engine.js	tryLoadCustomFont	982	function tryLoadCustomFont() {
engine.js	tryPlaySimpleSound	1018	function tryPlaySimpleSound(soundname) {
engine.js	tryPlayTitleSound	1024	function tryPlayTitleSound() {
engine.js	tryPlayStartGameSound	1028	function tryPlayStartGameSound() {
engine.js	tryPlayEndGameSound	1032	function tryPlayEndGameSound() {
engine.js	tryPlayCancelSound	1036	function tryPlayCancelSound() {
engine.js	tryPlayStartLevelSound	1040	function tryPlayStartLevelSound() {
engine.js	tryPlayEndLevelSound	1044	function tryPlayEndLevelSound() {
engine.js	tryPlayUndoSound	1048	function tryPlayUndoSound() {
engine.js	tryPlayRestartSound	1052	function tryPlayRestartSound() {
engine.js	tryPlayShowMessageSound	1056	function tryPlayShowMessageSound() {
engine.js	tryPlayCloseMessageSound	1060	function tryPlayCloseMessageSound() {
engine.js	backups	1064	var backups = []
engine.js	backupLevel	1067	function backupLevel() {
engine.js	level4Serialization	1083	function level4Serialization() {
engine.js	tryDeactivateYoutube	1094	function tryDeactivateYoutube() {
engine.js	tryActivateYoutube	1101	function tryActivateYoutube() {
engine.js	setGameState	1128	function setGameState(_state, command, randomseed) {
engine.js	RebuildLevelArrays	1326	function RebuildLevelArrays() {
engine.js	messagetext	1381	var messagetext = ""
engine.js	currentMovedEntities	1382	var currentMovedEntities = {}
engine.js	newMovedEntities	1383	var newMovedEntities = {}
engine.js	applyDiff	1385	function applyDiff(diff, level_objects) {
engine.js	unconsolidateDiff	1401	function unconsolidateDiff(before, after) {
engine.js	restoreLevel	1420	function restoreLevel(
engine.js	zoomscreen	1492	var zoomscreen = false
engine.js	flickscreen	1493	var flickscreen = false
engine.js	smoothscreen	1494	var smoothscreen = false
engine.js	screenwidth	1495	var screenwidth = 0
engine.js	screenheight	1496	var screenheight = 0
engine.js	consolidateDiff	1499	function consolidateDiff(before, after) {
engine.js	addUndoState	1564	function addUndoState(state) {
engine.js	DoRestart	1577	function DoRestart(force) {
engine.js	backupDiffers	1610	function backupDiffers() {
engine.js	DoUndo	1628	function DoUndo(
engine.js	getPlayerPositions	1658	function getPlayerPositions() {
engine.js	getLayersOfMask	1670	function getLayersOfMask(cellMask) {
engine.js	moveEntitiesAtIndex	1682	function moveEntitiesAtIndex(positionIndex, entityMask, dirMask) {
engine.js	startMovement	1700	function startMovement(dir) {
engine.js	dirMasksDelta	1710	var dirMasksDelta = {
engine.js	dirMaskName	1720	var dirMaskName = {
engine.js	seedsToPlay_CanMove	1730	var seedsToPlay_CanMove = []
engine.js	seedsToPlay_CantMove	1731	var seedsToPlay_CantMove = []
engine.js	repositionEntitiesOnLayer	1733	function repositionEntitiesOnLayer(positionIndex, layer, dirMask) {
engine.js	repositionEntitiesAtCell	1795	function repositionEntitiesAtCell(positionIndex) {
engine.js	Level	1827	function Level(lineNumber, width, height, layerCount, objects, section) {
engine.js	_movementVecIndex	1877	var _movementVecIndex = 0
engine.js	ellipsisPattern	1912	var ellipsisPattern = ["ellipsis"]
engine.js	BitVec	1914	function BitVec(init) {
engine.js	Rule	2037	function Rule(rule) {
engine.js	cellRowMatchesWildcardFunctionGenerate	2180	function cellRowMatchesWildcardFunctionGenerate(direction,cellRow,i, maxk, mink) {
engine.js	STRIDE_OBJ	2212	var STRIDE_OBJ = 1
engine.js	STRIDE_MOV	2213	var STRIDE_MOV = 1
engine.js	CellPattern	2215	function CellPattern(row) {
engine.js	CellReplacement	2225	function CellReplacement(row) {
engine.js	matchCache	2235	var matchCache = {}
engine.js	cellRowMatchesWildcardFunctionGenerate	2435	function cellRowMatchesWildcardFunctionGenerate(direction,cellRow,i, maxk, mink) {
engine.js	DoesCellRowMatchWildCard	2449	function DoesCellRowMatchWildCard(direction,cellRow,i,maxk,mink) {
engine.js	cellRowMatchesFunctionGenerate	2498	function cellRowMatchesFunctionGenerate(direction,cellRow,i) {
engine.js	DoesCellRowMatch	2505	function DoesCellRowMatch(direction,cellRow,i,k) {
engine.js	matchCellRow	2535	function matchCellRow(
engine.js	matchCellRowWildCard	2646	function matchCellRowWildCard(
engine.js	generateTuples	2761	function generateTuples(lists) {
engine.js	twiddleMetadataExtras	3063	function twiddleMetadataExtras(resetAutoTick = true) {
engine.js	showTempMessage	3105	function showTempMessage() {
engine.js	processOutputCommands	3121	function processOutputCommands(commands) {
engine.js	applyRandomRuleGroup	3136	function applyRandomRuleGroup(level, ruleGroup) {
engine.js	applyRuleGroup	3169	function applyRuleGroup(ruleGroup) {
engine.js	applyRules	3213	function applyRules(rules, loopPoint, startRuleGroupindex, bannedGroup) {
engine.js	resolveMovements	3279	function resolveMovements(level, bannedGroup) {
engine.js	sfxCreateMask	3340	var sfxCreateMask = null
engine.js	sfxDestroyMask	3341	var sfxDestroyMask = null
engine.js	calculateRowColMasks	3343	function calculateRowColMasks() {
engine.js	processInput	3383	function processInput(dir, dontDoWin, dontModify, bak) {
engine.js	checkWin	3804	function checkWin(dontDoWin) {
engine.js	DoWin	3905	function DoWin() {
engine.js	anyMovements	3922	function anyMovements() { 
engine.js	nextLevel	3931	function nextLevel() {
engine.js	loadLevelFromStateOrTarget	4027	function loadLevelFromStateOrTarget() {
engine.js	goToTitleScreen	4035	function goToTitleScreen() {
engine.js	resetFlickDat	4055	function resetFlickDat() {
engine.js	updateLocalStorage	4066	function updateLocalStorage() {
engine.js	setSectionSolved	4079	function setSectionSolved(section) {
engine.js	clearLocalStorage	4103	function clearLocalStorage() {
engine.js	cameraPositionTarget	4117	var cameraPositionTarget = null
engine.js	cameraPosition	4119	var cameraPosition = {
engine.js	initSmoothCamera	4124	function initSmoothCamera() {
engine.js	getCameraPosition	4166	function getCameraPosition(targetPosition, levelDimension, screenDimension) {
engine.js	getFlickCameraPosition	4173	function getFlickCameraPosition(
engine.js	updateCameraPositionTarget	4200	function updateCameraPositionTarget() {
engine.js	IsMouseGameInputEnabled	4244	function IsMouseGameInputEnabled() {
parser.js	compiling	22	var compiling = false
parser.js	errorStrings	23	var errorStrings = [] //also stores warning strings
parser.js	errorCount	24	var errorCount = 0 //only counts errors
parser.js	twiddleable_params	26	var twiddleable_params = [
parser.js	logErrorCacheable	40	function logErrorCacheable(str, lineNumber, urgent) {
parser.js	logError	64	function logError(str, lineNumber, urgent) {
parser.js	logWarning	88	function logWarning(str, lineNumber, urgent) {
parser.js	logWarningNoLine	111	function logWarningNoLine(str, urgent, increaseErrorCount = true) {
parser.js	logErrorNoLine	126	function logErrorNoLine(str, urgent) {
parser.js	logBetaMessage	139	function logBetaMessage(str, urgent) {
parser.js	blankLineHandle	151	function blankLineHandle(state) {
parser.js	codeMirrorFn	187	var codeMirrorFn = function () {
editor.js	code	0	var code = document.getElementById("code")
editor.js	_editorDirty	1	var _editorDirty = false
editor.js	_editorCleanState	2	var _editorCleanState = ""
editor.js	fileToOpen	4	var fileToOpen = getParameterByName("demo")
editor.js	editor	112	var editor = window.CodeMirror.fromTextArea(code, {
editor.js	checkEditorDirty	142	function checkEditorDirty() {
editor.js	setEditorClean	158	function setEditorClean() {
editor.js	mapObj	175	var mapObj = {
editor.js	getParameterByName	194	function getParameterByName(name) {
editor.js	tryLoadGist	203	function tryLoadGist(id) {
editor.js	tryLoadFile	257	function tryLoadFile(fileName) {
editor.js	canExit	274	function canExit() {
editor.js	dropdownChange	284	function dropdownChange() {
editor.js	debugPreview	304	function debugPreview(turnIndex, lineNumber) {
editor.js	debugUnpreview	309	function debugUnpreview() {
editor.js	addToDebugTimeline	314	function addToDebugTimeline(level, lineNumber) {
compiler.js	isColor	2	function isColor(str) {
compiler.js	colorToHex	11	function colorToHex(palette, str) {
compiler.js	generateSpriteMatrix	20	function generateSpriteMatrix(dat) {
compiler.js	generateExtraMembers	40	function generateExtraMembers(state) {
compiler.js	generateExtraMembersPart2	499	function generateExtraMembersPart2(state) {
compiler.js	levelFromString	578	function levelFromString(state, level) {
compiler.js	levelsToArray	640	function levelsToArray(state) {
compiler.js	extractSections	696	function extractSections(state) {
compiler.js	convertSectionNamesToIndices	722	function convertSectionNamesToIndices(state) {
compiler.js	directionaggregates	790	var directionaggregates = {
compiler.js	relativeDirections	803	var relativeDirections = ["^", "v", "<", ">", "perpendicular", "parallel"]
compiler.js	simpleAbsoluteDirections	804	var simpleAbsoluteDirections = ["up", "down", "left", "right"]
compiler.js	simpleRelativeDirections	805	var simpleRelativeDirections = ["^", "v", "<", ">"]
compiler.js	reg_directions_only	806	var reg_directions_only =
compiler.js	commandwords	809	var commandwords = [
compiler.js	directionalRule	843	function directionalRule(rule) {
compiler.js	findIndexAfterToken	875	function findIndexAfterToken(str, tokens, tokenIndex) {
compiler.js	rightBracketToRightOf	884	function rightBracketToRightOf(tokens, i) {
compiler.js	processRuleString	893	function processRuleString(rule, state, curRules) {
compiler.js	deepCloneHS	1283	function deepCloneHS(HS) {
compiler.js	deepCloneRule	1292	function deepCloneRule(rule) {
compiler.js	rulesToArray	1308	function rulesToArray(state) {
compiler.js	containsEllipsis	1381	function containsEllipsis(rule) {
compiler.js	rewriteUpLeftRules	1390	function rewriteUpLeftRules(rule) {
compiler.js	getPossibleObjectsFromCell	1412	function getPossibleObjectsFromCell(state, cell) {
compiler.js	getPropertiesFromCell	1430	function getPropertiesFromCell(state, cell) {
compiler.js	getMovings	1446	function getMovings(state, cell) {
compiler.js	concretizePropertyInCell	1458	function concretizePropertyInCell(cell, property, concreteType) {
compiler.js	concretizeMovingInCell	1466	function concretizeMovingInCell(
compiler.js	concretizeMovingInCellByAmbiguousMovementName	1479	function concretizeMovingInCellByAmbiguousMovementName(
compiler.js	expandNoPrefixedProperties	1491	function expandNoPrefixedProperties(state, cell) {
compiler.js	concretizePropertyRule	1512	function concretizePropertyRule(state, rule, lineNumber) {
compiler.js	makeSpawnedObjectsStationary	1680	function makeSpawnedObjectsStationary(state, rule, lineNumber) {
compiler.js	concretizeMovingRule	1716	function concretizeMovingRule(state, rule, lineNumber) {
compiler.js	rephraseSynonyms	1962	function rephraseSynonyms(state, rule) {
compiler.js	atomizeAggregates	1987	function atomizeAggregates(state, rule) {
compiler.js	atomizeCellAggregates	2004	function atomizeCellAggregates(state, cell, lineNumber) {
compiler.js	convertRelativeDirsToAbsolute	2027	function convertRelativeDirsToAbsolute(rule) {
compiler.js	relativeDirs	2045	var relativeDirs = ["^", "v", "<", ">", "parallel", "perpendicular"] //used to index the following
compiler.js	relativeDict	2047	var relativeDict = {
compiler.js	absolutifyRuleCell	2054	function absolutifyRuleCell(forward, cell) {
compiler.js	dirMasks	2072	var dirMasks = {
compiler.js	rulesToMask	2085	function rulesToMask(state) {
compiler.js	cellRowMasks	2421	function cellRowMasks(rule) {
compiler.js	cellRowMasks_Movements	2436	function cellRowMasks_Movements(rule) {
compiler.js	collapseRules	2451	function collapseRules(groups) {
compiler.js	ruleGroupDiscardOverlappingTest	2497	function ruleGroupDiscardOverlappingTest(ruleGroup) {
compiler.js	arrangeRulesByGroupNumber	2528	function arrangeRulesByGroupNumber(state) {
compiler.js	generateRigidGroupList	2570	function generateRigidGroupList(state) {
compiler.js	getMaskFromName	2608	function getMaskFromName(state, name) {
compiler.js	generateMasks	2647	function generateMasks(state) {
compiler.js	checkObjectsAreLayered	2708	function checkObjectsAreLayered(state) {
compiler.js	twiddleMetaData	2737	function twiddleMetaData(state, update = false) {
compiler.js	processWinConditions	2865	function processWinConditions(state) {
compiler.js	printCellRow	2923	function printCellRow(cellRow) {
compiler.js	cacheRuleStringRep	2944	function cacheRuleStringRep(rule) {
compiler.js	cacheAllRuleNames	2992	function cacheAllRuleNames(state) {
compiler.js	printRules	2999	function printRules(state) {
compiler.js	removeDuplicateRules	3040	function removeDuplicateRules(state) {
compiler.js	generateLoopPoints	3060	function generateLoopPoints(state) {
compiler.js	soundEvents	3163	var soundEvents = [
compiler.js	soundMaskedEvents	3186	var soundMaskedEvents = ["create", "destroy", "move", "cantmove", "action"]
compiler.js	soundVerbs	3187	var soundVerbs = soundEvents.concat(soundMaskedEvents)
compiler.js	validSeed	3189	function validSeed(seed) {
compiler.js	soundDirectionIndicatorMasks	3193	var soundDirectionIndicatorMasks = {
compiler.js	soundDirectionIndicators	3204	var soundDirectionIndicators = [
compiler.js	generateSoundData	3215	function generateSoundData(state) {
compiler.js	formatHomePage	3381	function formatHomePage(state) {
compiler.js	MAX_ERRORS	3441	var MAX_ERRORS = 5
compiler.js	loadFile	3443	function loadFile(str) {
compiler.js	compile	3531	function compile(command, text, randomseed) {
compiler.js	qualifyURL	3689	function qualifyURL(url) {
compiler.js	isSitelocked	3695	function isSitelocked() {
soundbar.js	newSound	2	function newSound(instrument) {
soundbar.js	buttonPress	26	function buttonPress() {
toolbar.js	solveClick	6	function solveClick() {
toolbar.js	runClick	16	function runClick() {
toolbar.js	cancelClick	21	function cancelClick() {
toolbar.js	dateToReadable	25	function dateToReadable(title, time) {
toolbar.js	saveClick	54	function saveClick() {
toolbar.js	loadDropDownChange	133	function loadDropDownChange() {
toolbar.js	repopulateSaveDropdown	168	function repopulateSaveDropdown(saves) {
toolbar.js	loadDropdown	201	var loadDropdown = document.getElementById("loadDropDown")
toolbar.js	levelEditorClick_Fn	204	function levelEditorClick_Fn() {
toolbar.js	getAuthURL	223	function getAuthURL() {
toolbar.js	printUnauthorized	236	function printUnauthorized() {
toolbar.js	shareClick	250	function shareClick() {
toolbar.js	githubLogOut	364	function githubLogOut() {
toolbar.js	rebuildClick	381	function rebuildClick() {
toolbar.js	post_to_url	385	function post_to_url(path, params, method) {
toolbar.js	exportClick	409	function exportClick() {
layout.js	soundbarwidth	0	var soundbarwidth = 100
layout.js	lowerbarheight	1	var lowerbarheight = document.getElementById("soundbar").clientHeight
layout.js	upperbarheight	2	var upperbarheight = document.getElementById("uppertoolbar").clientHeight
layout.js	winwidth	3	var winwidth = window.innerWidth
layout.js	winheight	4	var winheight = window.innerHeight
layout.js	verticaldragbarWidth	5	var verticaldragbarWidth =
layout.js	horizontaldragbarHeight	7	var horizontaldragbarHeight =
layout.js	minimumDimension	9	var minimumDimension = 100
layout.js	resize_widths	11	function resize_widths(verticaldragbarX) {
layout.js	resize_heights	24	function resize_heights(horizontaldragbarY) {
layout.js	resize_all	39	function resize_all(e) {
layout.js	verticalDragbarMouseDown	86	function verticalDragbarMouseDown(e) {
layout.js	verticalDragbarMouseMove	93	function verticalDragbarMouseMove(e) {
layout.js	verticalDragbarMouseUp	103	function verticalDragbarMouseUp(e) {
layout.js	horizontalDragbarMouseDown	108	function horizontalDragbarMouseDown(e) {
layout.js	horizontalDragbarMouseMove	115	function horizontalDragbarMouseMove(e) {
layout.js	horizontalDragbarMouseUp	125	function horizontalDragbarMouseUp(e) {
layout.js	reset_panels	130	function reset_panels() {
addlisteners.js	el	4	var el = document.getElementById("gameCanvas");
addlisteners_editor.js	solveClickLink	17	var solveClickLink = document.getElementById("solveClickLink")
addlisteners_editor.js	cancelClickLink	20	var cancelClickLink = document.getElementById("cancelClickLink")
addlisteners_editor.js	runClickLink	23	var runClickLink = document.getElementById("runClickLink")
addlisteners_editor.js	saveClickLink	26	var saveClickLink = document.getElementById("saveClickLink")
addlisteners_editor.js	rebuildClickLink	29	var rebuildClickLink = document.getElementById("rebuildClickLink")
addlisteners_editor.js	shareClickLink	32	var shareClickLink = document.getElementById("shareClickLink")
addlisteners_editor.js	levelEditorClickLink	35	var levelEditorClickLink = document.getElementById("levelEditorClickLink")
addlisteners_editor.js	exportClickLink	38	var exportClickLink = document.getElementById("exportClickLink")
addlisteners_editor.js	exampleDropdown	41	var exampleDropdown = document.getElementById("exampleDropdown")
addlisteners_editor.js	loadDropDown	44	var loadDropDown = document.getElementById("loadDropDown")
addlisteners_editor.js	horizontalDragbar	47	var horizontalDragbar = document.getElementById("horizontaldragbar")
addlisteners_editor.js	verticalDragbar	54	var verticalDragbar = document.getElementById("verticaldragbar")
addlisteners_editor.js	gestureHandler	76	var gestureHandler = Mobile.enable()
makegif.js	makeGIF	0	function makeGIF() {
solver.js	abortSolver	0	var abortSolver = false
solver.js	solving	1	var solving = false
solver.js	byScoreAndLength	5	function byScoreAndLength(a, b) {
solver.js	stopSolving	194	function stopSolving() {
solver.js	chunkString	198	function chunkString(str, length) {
solver.js	shuffleALittle	202	function shuffleALittle(array) {
solver.js	distance	209	function distance(index1, index2) {
solver.js	precalcDistances	217	function precalcDistances() {
solver.js	getScore	228	function getScore() {
